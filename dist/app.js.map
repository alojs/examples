{"version":3,"sources":["app/app.js","app/lib.js","app/main.js","app/router.js"],"names":["initialState","version","appStore","createStore","addMiddleware","App","self","el","sub","createSubscription","createMember","stores","computed","update","router","state","route","setTimeout","console","log","dispatch","routerState","stop","alo","thunkMiddleware","extras","middlewares","createThunk","app","document","addEventListener","event","getElementById","routerStore","setRoute","type","payload","routeReducer","createReducer","action","catch","err","error","then","window"],"mappings":"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","file":"/home/katja/Dokumente/alo-examples/dist/app.js","sourcesContent":["// @flow\n\nimport { el, setChildren } from 'redom'\nimport { alo, thunkMiddleware } from './lib.js'\nimport { routerStore, setRoute } from './router.js'\n\n/*\n * Setup core app store\n */\n/**\n * Holds the initial state for the app store\n */\nconst initialState: { version: number } = {\n  /**\n   * Holds a version number of this app, this is essential if you want to store the state in the localStorage\n   * So you can check if the localStorage has an old, invalid state\n   */\n  version: 1\n}\nexport var appStore = alo.createStore(initialState, 'app')\n\n/*\n * Setup the thunkMiddleware on the app store.\n */\nappStore.addMiddleware(thunkMiddleware)\n\n/**\n * The app class, its main purpose is to be the centralized point for the app rendering'\n */\nclass App {\n  /* :: el: HTMLElement */\n  /* :: sub: Object */\n  constructor () {\n    var self = this\n\n    this.el = el('div.todoApp')\n    this.sub = routerStore.createSubscription()\n    this.sub.createMember(function (stores, computed) {\n      self.update(stores.router.state)\n    })\n    self.update({ route: 'loading' })\n    setTimeout(function () {\n      console.log('dispatch')\n      routerStore.dispatch(setRoute('todos'))\n    }, 5000)\n  }\n  update (routerState: Object) {\n    switch (routerState.route) {\n      case 'loading':\n        setChildren(this.el, [el('span', 'loading')])\n        break\n      case 'todos':\n        setChildren(this.el, [el('span', 'todos')])\n    }\n  }\n  destroy () {\n    this.sub.stop()\n    delete this.el\n  }\n}\nexport default App\n","// @flow\n\nimport Alo from 'alo/dist/alo.full.dev.js'\n\n/**\n * Alo instance for this app\n */\nexport var alo = new Alo()\n\n/**\n * This middleware allows to dispatch functions\n */\nexport var thunkMiddleware = alo.extras.middlewares.createThunk()\n","// @flow\n\nimport App from './app.js'\nimport { mount } from 'redom'\n\nvar app = new App()\n\ndocument.addEventListener('DOMContentLoaded', function (event) {\n  mount(document.getElementById('app'), app)\n})\n","// @flow\n\nimport { thunkMiddleware, alo } from './lib.js'\n\n/**\n * Holds the initial state for the router store\n */\nconst initialState: { route: string } = {\n  /**\n   * Holds just the name of the current route\n   */\n  route: ''\n}\n\nexport var routerStore = alo.createStore(initialState, 'router')\n// routerStore.addMiddleware(thunkMiddleware)\n\n/**\n * Returns an action object, which can be dispatched on the router to set a specific route\n */\nexport var setRoute = function (route: string): { type: string, payload: string } {\n  return {\n    type: 'setRoute',\n    payload: route\n  }\n}\n\n/*\n * Route reducer\n */\nexport var routeReducer = routerStore.createReducer(function (state, action) {\n  console.log('dispatch', action)\n  switch (action.type) {\n    case 'setRoute':\n      state.route = action.payload\n      break\n  }\n\n  return state\n})\n\nconsole.log('router')\nrouterStore.dispatch(setRoute('loading')).catch(function(err) {\n  console.error(err)\n}).then(function() {\n  console.log('dispatch done')\n})\n\nwindow.routerStore = routerStore\nwindow.alo = alo\n"]}